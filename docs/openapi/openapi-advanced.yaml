# Module 12: Advanced Features
# OpenAPI specification for webhooks, batch operations, search, conflicts, notifications, audit logs, and exports

paths:
  # ==================== WEBHOOKS ====================

  /webhooks:
    post:
      tags:
        - Advanced
      summary: Register webhook endpoint
      description: Register webhook for event notifications (ADMIN role)
      operationId: registerWebhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                events:
                  type: array
                  items:
                    type: string
                secret:
                  type: string
              required:
                - url
                - events
      responses:
        '201':
          description: Webhook registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDTO'
        '400':
          $ref: './openapi-schemas.yaml#/components/responses/ValidationError'
        '401':
          $ref: './openapi-schemas.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './openapi-schemas.yaml#/components/responses/ForbiddenError'

  # ==================== GLOBAL SEARCH ====================

  /search:
    get:
      tags:
        - Advanced
      summary: Global search
      description: Search across students, teachers, classes, and courses
      operationId: globalSearch
      parameters:
        - name: q
          in: query
          required: true
          description: Search query
          schema:
            type: string
        - name: type
          in: query
          description: Filter by type (comma-separated)
          schema:
            type: string
        - $ref: './openapi-schemas.yaml#/components/parameters/BranchIdParam'
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultsDTO'
        '401':
          $ref: './openapi-schemas.yaml#/components/responses/UnauthorizedError'

  # ==================== CONFLICT DETECTION ====================

  /conflicts/check:
    post:
      tags:
        - Advanced
      summary: Check schedule conflicts
      description: Check for resource, teacher, or capacity conflicts
      operationId: checkConflicts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConflictCheckRequest'
      responses:
        '200':
          description: Conflict check results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictCheckResponse'
        '400':
          $ref: './openapi-schemas.yaml#/components/responses/ValidationError'
        '401':
          $ref: './openapi-schemas.yaml#/components/responses/UnauthorizedError'

  # ==================== BATCH OPERATIONS ====================

  /sessions/bulk-update:
    post:
      tags:
        - Advanced
      summary: Bulk update sessions
      description: Update multiple sessions at once (MANAGER role)
      operationId: bulkUpdateSessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_ids:
                  type: array
                  items:
                    type: integer
                    format: int64
                updates:
                  type: object
                  properties:
                    status:
                      $ref: './openapi-schemas.yaml#/components/schemas/SessionStatusEnum'
                    teacher_note:
                      type: string
              required:
                - session_ids
                - updates
      responses:
        '200':
          description: Bulk update results
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  successful:
                    type: integer
                  failed:
                    type: integer
                  updated_sessions:
                    type: array
                    items:
                      type: integer
                      format: int64
        '400':
          $ref: './openapi-schemas.yaml#/components/responses/ValidationError'
        '401':
          $ref: './openapi-schemas.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './openapi-schemas.yaml#/components/responses/ForbiddenError'

  /teachers/{teacher_id}/bulk-assign:
    post:
      tags:
        - Advanced
      summary: Bulk assign teacher to sessions
      description: Assign teacher to multiple sessions (MANAGER role)
      operationId: bulkAssignTeacher
      parameters:
        - name: teacher_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_ids:
                  type: array
                  items:
                    type: integer
                    format: int64
                skill:
                  $ref: './openapi-schemas.yaml#/components/schemas/SkillEnum'
                role:
                  $ref: './openapi-schemas.yaml#/components/schemas/TeachingRoleEnum'
              required:
                - session_ids
                - skill
                - role
      responses:
        '200':
          description: Bulk assignment results
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  successful:
                    type: integer
                  failed:
                    type: integer
                  conflicts:
                    type: array
                    items:
                      $ref: './openapi-schemas.yaml#/components/schemas/Conflict'
                  teaching_slots_created:
                    type: integer
        '400':
          $ref: './openapi-schemas.yaml#/components/responses/ValidationError'
        '401':
          $ref: './openapi-schemas.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './openapi-schemas.yaml#/components/responses/ForbiddenError'
        '404':
          $ref: './openapi-schemas.yaml#/components/responses/NotFoundError'

  # ==================== AUDIT LOGS ====================

  /audit-logs:
    get:
      tags:
        - Advanced
      summary: Get audit logs
      description: Retrieve system audit trail (ADMIN role)
      operationId: getAuditLogs
      parameters:
        - name: entity_type
          in: query
          schema:
            type: string
            enum: [class, session, enrollment, user]
        - name: entity_id
          in: query
          schema:
            type: integer
            format: int64
        - name: action
          in: query
          schema:
            type: string
            enum: [create, update, delete, approve, reject]
        - name: user_id
          in: query
          description: User who performed the action
          schema:
            type: integer
            format: int64
        - $ref: './openapi-schemas.yaml#/components/parameters/DateFromParam'
        - $ref: './openapi-schemas.yaml#/components/parameters/DateToParam'
        - $ref: './openapi-schemas.yaml#/components/parameters/PageParam'
        - $ref: './openapi-schemas.yaml#/components/parameters/LimitParam'
      responses:
        '200':
          description: Audit logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLogDTO'
                  pagination:
                    $ref: './openapi-schemas.yaml#/components/schemas/Pagination'
        '401':
          $ref: './openapi-schemas.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: './openapi-schemas.yaml#/components/responses/ForbiddenError'

  # ==================== NOTIFICATIONS ====================

  /notifications:
    get:
      tags:
        - Notifications
      summary: Get user notifications
      description: Get notifications for current user
      operationId: getUserNotifications
      parameters:
        - name: status
          in: query
          description: Filter by status
          schema:
            type: string
            enum: [unread, read, all]
            default: unread
        - name: type
          in: query
          description: Filter by notification type
          schema:
            type: string
            enum: [class, session, request, assessment]
        - $ref: './openapi-schemas.yaml#/components/parameters/PageParam'
        - $ref: './openapi-schemas.yaml#/components/parameters/LimitParam'
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListDTO'
        '401':
          $ref: './openapi-schemas.yaml#/components/responses/UnauthorizedError'

  /notifications/{id}/read:
    put:
      tags:
        - Notifications
      summary: Mark notification as read
      description: Mark a single notification as read
      operationId: markNotificationAsRead
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Notification marked as read
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationDTO'
        '401':
          $ref: './openapi-schemas.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './openapi-schemas.yaml#/components/responses/NotFoundError'

  /notifications/mark-all-read:
    post:
      tags:
        - Notifications
      summary: Mark all notifications as read
      description: Mark all notifications as read for current user
      operationId: markAllNotificationsAsRead
      responses:
        '200':
          description: All notifications marked as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  marked_read:
                    type: integer
                  timestamp:
                    type: string
                    format: date-time
        '401':
          $ref: './openapi-schemas.yaml#/components/responses/UnauthorizedError'

  # ==================== EXPORT OPERATIONS ====================

  /classes/{class_id}/export:
    get:
      tags:
        - Export
      summary: Export class data
      description: Export class data to various formats
      operationId: exportClassData
      parameters:
        - name: class_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: format
          in: query
          description: Export format
          schema:
            type: string
            enum: [csv, xlsx, pdf]
            default: xlsx
        - name: include
          in: query
          description: Data to include (comma-separated)
          schema:
            type: string
            example: "attendance,scores,feedback"
      responses:
        '200':
          description: File download
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: './openapi-schemas.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: './openapi-schemas.yaml#/components/responses/NotFoundError'

  /reports/{report_type}/export:
    get:
      tags:
        - Export
      summary: Export report data
      description: Export report to various formats
      operationId: exportReportData
      parameters:
        - name: report_type
          in: path
          required: true
          description: Type of report to export
          schema:
            type: string
            enum: [enrollments, attendance, class-utilization, teacher-workload, resource-utilization, clo-attainment, feedback-rating, daily-runsheet]
        - name: format
          in: query
          description: Export format
          schema:
            type: string
            enum: [csv, xlsx, pdf]
            default: xlsx
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
        - $ref: './openapi-schemas.yaml#/components/parameters/BranchIdParam'
      responses:
        '200':
          description: File download
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
            text/csv:
              schema:
                type: string
                format: binary
        '400':
          $ref: './openapi-schemas.yaml#/components/responses/ValidationError'
        '401':
          $ref: './openapi-schemas.yaml#/components/responses/UnauthorizedError'

components:
  schemas:
    # ==================== WEBHOOK SCHEMAS ====================

    WebhookDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        url:
          type: string
          format: uri
        events:
          type: array
          items:
            type: string
        active:
          type: boolean
        created_at:
          type: string
          format: date-time

    # ==================== SEARCH SCHEMAS ====================

    SearchResultsDTO:
      type: object
      properties:
        query:
          type: string
        total_results:
          type: integer
        results:
          type: object
          properties:
            classes:
              type: array
              items:
                type: object
            courses:
              type: array
              items:
                type: object
            students:
              type: array
              items:
                type: object
            teachers:
              type: array
              items:
                type: object

    # ==================== CONFLICT DETECTION SCHEMAS ====================

    ConflictCheckRequest:
      type: object
      properties:
        type:
          type: string
          enum: [session]
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        teacher_ids:
          type: array
          items:
            type: integer
            format: int64
        resource_ids:
          type: array
          items:
            type: integer
            format: int64
        exclude_session_id:
          type: integer
          format: int64
          nullable: true
      required:
        - type
        - date
        - start_time
        - end_time

    ConflictCheckResponse:
      type: object
      properties:
        has_conflicts:
          type: boolean
        conflicts:
          type: array
          items:
            $ref: './openapi-schemas.yaml#/components/schemas/Conflict'
        available_alternatives:
          type: object
          properties:
            teachers:
              type: array
              items:
                type: object
            resources:
              type: array
              items:
                type: object

    # ==================== AUDIT LOG SCHEMAS ====================

    AuditLogDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        entity_type:
          type: string
        entity_id:
          type: integer
          format: int64
        action:
          type: string
        performed_by:
          type: object
          properties:
            user_id:
              type: integer
              format: int64
            name:
              type: string
            role:
              type: string
        changes:
          type: object
          additionalProperties: true
        timestamp:
          type: string
          format: date-time

    # ==================== NOTIFICATION SCHEMAS ====================

    NotificationDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum: [request_approved, request_rejected, attendance_warning, class_started, class_cancelled, session_rescheduled, score_published, feedback_requested]
        title:
          type: string
        message:
          type: string
        status:
          type: string
          enum: [unread, read]
        priority:
          type: string
          enum: [low, normal, high]
        data:
          type: object
          additionalProperties: true
          description: Additional data specific to notification type
        created_at:
          type: string
          format: date-time
        read_at:
          type: string
          format: date-time
          nullable: true

    NotificationListDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/NotificationDTO'
        summary:
          type: object
          properties:
            total_unread:
              type: integer
            by_priority:
              type: object
              properties:
                high:
                  type: integer
                normal:
                  type: integer
                low:
                  type: integer
        pagination:
          $ref: './openapi-schemas.yaml#/components/schemas/Pagination'
