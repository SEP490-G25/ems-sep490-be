# Module 1: Authentication & Authorization
# OpenAPI specification for authentication endpoints

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: |
        Authenticate user with email/phone and password. Returns access token and refresh token.

        **Supported login methods:**
        - Email + Password
        - Phone + Password
      operationId: login
      security: []  # No authentication required for login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            examples:
              emailLogin:
                summary: Login with email
                value:
                  email: "user@example.com"
                  password: "securePassword123"
              phoneLogin:
                summary: Login with phone
                value:
                  phone: "+84901234567"
                  password: "securePassword123"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              example:
                access_token: "eyJhbGc..."
                refresh_token: "eyJhbGc..."
                expires_in: 3600
                user:
                  id: 1
                  email: "user@example.com"
                  full_name: "Nguyễn Văn A"
                  roles: ["STUDENT", "TEACHER"]
                  branches:
                    - id: 1
                      code: "HN-CG"
                      name: "Cầu Giấy"
        '400':
          $ref: './openapi-schemas.yaml#/components/responses/ValidationError'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: './openapi-schemas.yaml#/components/schemas/ErrorResponse'
              example:
                error: "invalid_credentials"
                message: "Invalid email/phone or password"
                timestamp: "2025-01-15T10:30:00Z"
        '500':
          $ref: './openapi-schemas.yaml#/components/responses/InternalServerError'

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: |
        Generate a new access token using a valid refresh token.
        The refresh token remains valid and can be reused until it expires.
      operationId: refreshToken
      security: []  # No bearer token required, uses refresh token in body
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
            example:
              refresh_token: "eyJhbGc..."
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
              example:
                access_token: "eyJhbGc..."
                expires_in: 3600
        '400':
          $ref: './openapi-schemas.yaml#/components/responses/ValidationError'
        '401':
          description: Invalid or expired refresh token
          content:
            application/json:
              schema:
                $ref: './openapi-schemas.yaml#/components/schemas/ErrorResponse'
              example:
                error: "invalid_refresh_token"
                message: "Refresh token is invalid or expired"
                timestamp: "2025-01-15T10:30:00Z"
        '500':
          $ref: './openapi-schemas.yaml#/components/responses/InternalServerError'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: |
        Invalidate the current access token and refresh token.
        After logout, both tokens cannot be used anymore.
      operationId: logout
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Logout successful (no content)
        '401':
          $ref: './openapi-schemas.yaml#/components/responses/UnauthorizedError'
        '500':
          $ref: './openapi-schemas.yaml#/components/responses/InternalServerError'

components:
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: "User's email address"
          example: "user@example.com"
        phone:
          type: string
          pattern: '^\+[0-9]{10,15}$'
          description: "User's phone number with country code"
          example: "+84901234567"
        password:
          type: string
          format: password
          minLength: 8
          description: "User's password"
          example: "securePassword123"
      required:
        - password
      oneOf:
        - required: [email]
        - required: [phone]

    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
          description: "JWT access token for API authentication"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refresh_token:
          type: string
          description: "JWT refresh token for obtaining new access tokens"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expires_in:
          type: integer
          description: "Access token expiration time in seconds"
          example: 3600
        user:
          $ref: '#/components/schemas/UserProfile'
      required:
        - access_token
        - refresh_token
        - expires_in
        - user

    UserProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        email:
          type: string
          format: email
          example: "user@example.com"
        full_name:
          type: string
          example: "Nguyễn Văn A"
        roles:
          type: array
          items:
            type: string
            enum:
              - ADMIN
              - MANAGER
              - CENTER_HEAD
              - ACADEMIC_STAFF
              - SUBJECT_LEADER
              - TEACHER
              - STUDENT
          description: "List of roles assigned to the user"
          example: ["STUDENT", "TEACHER"]
        branches:
          type: array
          items:
            $ref: './openapi-schemas.yaml#/components/schemas/BranchReference'
          description: "Branches the user has access to"
      required:
        - id
        - email
        - full_name
        - roles

    RefreshTokenRequest:
      type: object
      properties:
        refresh_token:
          type: string
          description: "Valid refresh token obtained from login"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      required:
        - refresh_token

    RefreshTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: "New JWT access token"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expires_in:
          type: integer
          description: "New access token expiration time in seconds"
          example: 3600
      required:
        - access_token
        - expires_in