version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ems-postgres
    environment:
      POSTGRES_DB: ems
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 979712
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - ems-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ems"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ems-spring-boot
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ems
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 979712
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ems-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # pgAdmin (Optional - Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ems-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ems.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - ems-network
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

networks:
  ems-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
