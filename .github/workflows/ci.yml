 name: CI/CD Pipeline

 on:
   push:
     branches:
       - main
       - develop
   pull_request:
     branches:
       - main
       - develop

 jobs:
   build-and-test:
     name: Build and Test
     runs-on: ubuntu-latest

     services:
       postgres:
         image: postgres:16-alpine
         env:
           POSTGRES_DB: ems_test
           POSTGRES_USER: postgres
           POSTGRES_PASSWORD: 979712
         ports:
           - 5432:5432
         options: >-
           --health-cmd pg_isready
           --health-interval 10s
           --health-timeout 5s
           --health-retries 5

     steps:
       - name: Checkout code
         uses: actions/checkout@v4

       - name: Set up JDK 21
         uses: actions/setup-java@v4
         with:
           java-version: '21'
           distribution: 'temurin'
           cache: maven

       - name: Cache Maven packages
         uses: actions/cache@v4
         with:
           path: ~/.m2
           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
           restore-keys: ${{ runner.os }}-m2

       - name: Build with Maven
         run: ./mvnw clean compile -B

       - name: Run tests
         run: ./mvnw test -B
         env:
           SPRING_PROFILES_ACTIVE: test

       - name: Generate coverage report
         run: ./mvnw jacoco:report

       - name: Check code coverage
         run: ./mvnw jacoco:check
         continue-on-error: true

       - name: Upload coverage to Codecov (Optional)
         uses: codecov/codecov-action@v4
         if: success()
         with:
           file: ./target/site/jacoco/jacoco.xml
           flags: unittests
           name: codecov-umbrella
           fail_ci_if_error: false
         continue-on-error: true

       - name: Archive test results
         if: always()
         uses: actions/upload-artifact@v4
         with:
           name: test-results
           path: target/surefire-reports/

       - name: Archive coverage report
         if: success()
         uses: actions/upload-artifact@v4
         with:
           name: coverage-report
           path: target/site/jacoco/

       - name: Comment PR with coverage
         if: github.event_name == 'pull_request'
         uses: madrapps/jacoco-report@v1.6.1
         with:
           paths: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
           token: ${{ secrets.GITHUB_TOKEN }}
           min-coverage-overall: 50
           min-coverage-changed-files: 60
         continue-on-error: true

   code-quality:
     name: Code Quality Check
     runs-on: ubuntu-latest
     needs: build-and-test

     steps:
       - name: Checkout code
         uses: actions/checkout@v4

       - name: Set up JDK 21
         uses: actions/setup-java@v4
         with:
           java-version: '21'
           distribution: 'temurin'
           cache: maven

       - name: Run Maven verify
         run: ./mvnw verify -DskipTests -B

       - name: Check for compilation warnings
         run: ./mvnw clean compile -B | tee compile.log && ! grep -i "warning" compile.log
         continue-on-error: true

   build-docker:
     name: Build Docker Image
     runs-on: ubuntu-latest
     needs: build-and-test
     if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

     steps:
       - name: Checkout code
         uses: actions/checkout@v4

       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v3

       - name: Build Docker image
         uses: docker/build-push-action@v5
         with:
           context: .
           push: false
           tags: ems-sep490-be:${{ github.sha }}
           cache-from: type=gha
           cache-to: type=gha,mode=max

       - name: Test Docker image
         run: |
           docker build -t ems-sep490-be:test .
           docker run --rm ems-sep490-be:test java -version

   dependency-check:
     name: Security Dependency Check
     runs-on: ubuntu-latest

     steps:
       - name: Checkout code
         uses: actions/checkout@v4

       - name: Set up JDK 21
         uses: actions/setup-java@v4
         with:
           java-version: '21'
           distribution: 'temurin'
           cache: maven

       - name: Check for vulnerabilities
         run: ./mvnw dependency-check:check -B
         continue-on-error: true

       - name: Upload dependency check report
         if: always()
         uses: actions/upload-artifact@v4
         with:
           name: dependency-check-report
           path: target/dependency-check-report.html
         continue-on-error: true
